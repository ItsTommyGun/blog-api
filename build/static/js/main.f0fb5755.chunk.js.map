{"version":3,"sources":["LoadingIndicator/loading.svg","LoadingIndicator/LoadingIndicator.tsx","helpers/userRole.ts","helpers/toast.ts","helpers/port.ts","helpers/http.tsx","Login/Login.tsx","Profile/Profile.tsx","UserManagement/UserManagement.tsx","Blog/Blog.tsx","assets/tommyCodes.svg","App.tsx","reportWebVitals.js","index.js"],"names":["LoadingIndicator","isLoading","className","src","loadingSpinner","alt","isAdmin","token","localStorage","getItem","jwt_decode","role","getUserRole","toUpperCase","Type","PORT","process","postRequest","url","data","fetch","method","mode","cache","credentials","headers","Authorization","body","JSON","stringify","getRequest","putRequest","showNotification","message","type","closingTime","success","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Slide","error","Login","useState","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","setMessage","setLoggedIn","handleErrors","response","a","ok","json","then","text","Error","useEffect","handleLogin","e","password","email","validity","target","parentElement","checkValidity","reportValidity","preventDefault","resp","setItem","setTimeout","window","location","href","catch","Helmet","charSet","autoComplete","onSubmit","name","required","placeholder","onLoad","value","onChange","minLength","onClick","style","float","handleRegister","Profile","setName","surname","setSurname","city","setCity","changedName","setChangedName","changedSurname","setChangedSurname","changedCity","setChangedCity","authStatus","getProfileData","removeItem","defaultValue","profile","handleProfileUpdate","icon","faSave","UserManagement","handleLoading","setEmail","setPassword","setRole","users","setUsers","changed","setChanged","getUsers","removeUser","userId","deleteRequest","id","form","createNewUser","map","user","_id","faUserSlash","froalaConfiguration","docId","toolbarButtons","quickInsertTags","Blog","entries","setEntries","title","setTitle","content","setContent","dataChanged","setDataChanged","showWriteEntry","setShowWriteEntry","getBlogEntries","reverse","faPen","config","tag","onModelChange","model","createBlogEntry","length","entry","entryDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","time","dangerouslySetInnerHTML","__html","App","setIsLoading","setToken","activeClassName","to","exact","tommyCodesLogo","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0fb5755.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.e3474b89.svg\";","import './LoadingIndicator.scss';\nimport loadingSpinner from \"./loading.svg\";\n\nexport type isLoading = {\n    isLoading: boolean\n}\n\nfunction LoadingIndicator({isLoading}: isLoading) {\n    return <div className={`loading-indicator ${isLoading ? \"loading\" : ''}`}>\n        <img className={`loading-indicator__spinner`} src={loadingSpinner} alt=\"Loading ...\" />\n    </div>\n}\n\nexport default LoadingIndicator","import jwt_decode from \"jwt-decode\";\n\ninterface DecodedToken {\n  id: string,\n  role: string,\n  iap: number,\n  exp: number\n}\n\nexport function getUserRole() {\n    var token = localStorage.getItem(\"token\");\n    if(!token) {\n        return '';\n    }\n    var decoded: DecodedToken = jwt_decode(token);   \n    return decoded.role;\n}\n\nexport function isAdmin() {\n  var currentUserRole = getUserRole();\n  return currentUserRole.toUpperCase() === \"ADMIN\";\n}\n\nexport default isAdmin;","import { toast, Slide } from \"react-toastify\";\n\nexport enum Type {\n    \"error\",\n    \"success\"\n}\n\nexport function showNotification(message: string, type?: Type, closingTime = 2000) {\n    switch (type) {\n        case Type.success:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        case Type.error:\n            toast.error(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        default:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n    }\n};","const PORT = process.env.PORT || 3001;\n\nexport default PORT;","import PORT from \"./port\";\n\ntype Data = {\n  [key: string]: string;\n};\n\nexport function getTokenFromStorage() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function postRequest(url: string, data: Data) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nexport function getRequest(url: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n\nexport function deleteRequest(url: string, userId: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}/${userId}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n\nexport function putRequest(url: string, data: Data) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n}\n","import { useEffect, useState } from \"react\";\nimport \"./Login.scss\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Helmet } from \"react-helmet\";\nimport { postRequest } from \"../helpers/http\";\nimport { showNotification, Type } from \"../helpers/toast\";\n\nfunction Login() {\n  const [registerEmail, setRegisterEmail] = useState<string>(\"\");\n  const [registerPassword, setRegisterPassword] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  async function handleErrors(response: any) {\n    if (!response.ok) {\n      await response.json().then((text: any) => {\n        throw Error(text.error);\n      });\n    }\n    return response.json();\n  }\n\n  type Data = {\n    password: string,\n    email: string\n  }\n\n  const handleRegister = (\n    e: any,\n    data: Data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\") {\n      setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      setMessage(\"\");\n    }\n\n    postRequest(\"api/auth/register\", data)\n      .then(handleErrors)\n      .then(() => {\n        showNotification(\"User was successfully registered!\");\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const handleLogin = (\n    e: any,\n    data: Data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    const validity = e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\" || !validity) {\n      setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      setMessage(\"\");\n    }\n    postRequest(\"api/auth/login\", data)\n      .then(handleErrors)\n      .then((resp) => {\n        showNotification(\"Logged in!\");\n        localStorage.setItem(\"token\", resp.token);\n\n        setTimeout(() => {\n          window.location.href = \"/\";\n        }, 1500);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Tommycodes Blog - Login</title>\n      </Helmet>\n      <div className=\"login\">\n        <div className=\"welcome-headline\">\n          <h2>Welcome to Tommycodes</h2>\n        </div>\n        <div className=\"login-container\">\n          <form autoComplete=\"on\" onSubmit={(e) => handleLogin(e)}>\n            <label>E-Mail</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"example@domain.com\"\n              onLoad={(e: any) => setRegisterEmail(e.target.value)}\n              onChange={(e) => setRegisterEmail(e.target.value)}\n            />\n\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              placeholder=\"********\"\n              minLength={6}\n              onLoad={(e: any) => setRegisterPassword(e.target.value)}\n              onChange={(e) => setRegisterPassword(e.target.value)}\n            />\n\n            <span className=\"error-message error-message--small\">\n              {message}\n            </span>\n\n            <button onClick={(e) => handleLogin(e)}>Login</button>\n            <button\n              style={{ float: \"right\" }}\n              onClick={(e) => handleRegister(e)}\n            >\n              Register\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { showNotification, Type } from \"../helpers/toast\";\nimport { getRequest, putRequest } from \"../helpers/http\";\n\nfunction Profile() {\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const [changedName, setChangedName] = useState(\"\");\n  const [changedSurname, setChangedSurname] = useState(\"\");\n  const [changedCity, setChangedCity] = useState(\"\");\n\n  async function handleErrors(response: any) {\n    if (!response.ok) {\n      await response.json().then((error: any) => {\n        if(error.authStatus === 'failed') {\n          throw Error(\"authFailed\")\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getProfileData();\n  }, []);\n\n  const getProfileData = () => {\n    if (name !== \"\") return;\n    getRequest(\"api/profile\")\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.name);\n        setSurname(resp.surname);\n        setCity(resp.city);\n      })\n      .catch((error) => {\n        \n        if(error.message === 'authFailed') {\n          localStorage.removeItem(\"token\");\n          showNotification(\"Session expired or token invalid. Please log in.\", Type.error);\n          setTimeout(() => {\n            window.location.href = \"/\";\n          }, 2000);\n          return;\n        }\n\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const handleProfileUpdate = (\n    data = { name: changedName, surname: changedSurname, city: changedCity }\n  ) => {\n    if (data.name === \"\") {\n      data.name = name;\n    }\n    if (data.surname === \"\") {\n      data.surname = surname;\n    }\n    if (data.city === \"\") {\n      data.city = city;\n    }\n\n    putRequest(\"api/profile\", data)\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.profile.name);\n        setSurname(resp.profile.surname);\n        showNotification(resp.message);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error)\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Your profile</h2>\n\n        <div className=\"card\">\n          <p>\n            <label>Name:</label>\n            <input\n              defaultValue={name}\n              onChange={(e) => setChangedName(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>Surname:</label>\n            <input\n              defaultValue={surname}\n              onChange={(e) => setChangedSurname(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>City:</label>\n            <input\n              defaultValue={city}\n              onChange={(e) => setChangedCity(e.target.value)}\n            />\n          </p>\n\n          <button onClick={() => handleProfileUpdate()}>\n            <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n          </button>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport { deleteRequest, getRequest, postRequest } from \"../helpers/http\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { showNotification, Type } from \"../helpers/toast\";\nimport { setLoadingState } from \"../App\";\n\ntype User = {\n  email: string,\n  role: string,\n  _id: string\n}\n\nfunction UserManagement({handleLoading}: setLoadingState) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  \n  const [users, setUsers] = useState([]);\n  const [changed, setChanged] = useState('');\n\n  async function handleErrors(response: Response) {\n    if (!response.ok) {\n      await response.json().then((error: any) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getUsers();    \n  }, [changed]);\n\n  const createNewUser = (e: any, data = { email, password, role }) => {\n    e.target.form.checkValidity();\n    e.target.form.reportValidity();\n    e.preventDefault();\n\n    if(data.email === '' || data.password === '' || data.role === '') {\n        return;\n    }\n\n    const endpoint = \"api/auth/register\";\n\n    postRequest(endpoint, data)\n      .then(handleErrors)\n      .then((resp) => {\n        setChanged(resp);\n        showNotification(\"User was successfully registered\");\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const getUsers = () => {\n    handleLoading(true);\n    const endpoint = \"api/users\";\n\n    getRequest(endpoint)\n      .then(handleErrors)\n      .then((resp) => {\n        setUsers(resp);\n        handleLoading(false);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n        handleLoading(false);\n      });\n  }\n\n  const removeUser = (userId: User[\"_id\"]) => {\n    const endpoint = \"api/users\";\n\n    deleteRequest(endpoint, userId)\n      .then(handleErrors)\n      .then((resp) => {\n        showNotification(resp.message);\n        setChanged(resp);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Create new user</h2>\n\n        <form>\n          <div className=\"card\">\n            <p>\n              <label>User E-Mail:</label>\n              <input\n                type=\"email\"\n                required\n                placeholder=\"example@mail.com\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Password (temporary):</label>\n              <input\n                type=\"text\"\n                required\n                placeholder=\"******\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Role:</label>\n              <select\n                name=\"role\"\n                onChange={(e) => setRole(e.target.value)}\n                defaultValue={\"Please choose a role\"}\n                id=\"role\"\n                required\n              >\n                <option value=\"\">\n                  Please choose a role\n                </option>\n                <option id=\"admin\">\n                  Admin\n                </option>\n                <option id=\"editor\">\n                  Editor\n                </option>\n                <option id=\"writer\">\n                  Writer\n                </option>\n              </select>\n            </p>\n\n            <button onClick={(e) => createNewUser(e)}>\n              <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n            </button>\n          </div>\n        </form>\n      \n        <hr />\n        <h2>All registered users</h2>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Role</td>\n              <td>Remove</td>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user: User) => {\n              return (\n                <tr key={user.email}>\n                  <td>{user.email}</td>\n                  <td>{user.role}</td>\n                  <td>\n                    <button onClick={() => removeUser(user._id)}><FontAwesomeIcon icon={faUserSlash} /> Remove</button>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default UserManagement;\n","import { useEffect, useState } from \"react\";\nimport \"./Blog.scss\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport isAdmin from \"../helpers/userRole\";\n\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\nimport \"froala-editor/js/plugins.pkgd.min.js\";\n\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\n\nimport \"froala-editor/css/plugins/table.min.css\";\nimport \"froala-editor/js/plugins/table.min.js\";\n\nimport \"froala-editor/js/plugins/lists.min.js\";\n\n// import \"froala-editor/js/plugins/paragraphFormat.min.js\";\n\nimport FroalaEditor from \"react-froala-wysiwyg\";\n\nimport { Helmet } from \"react-helmet\";\nimport { setLoadingState } from \"../App\";\nimport { showNotification, Type } from \"../helpers/toast\";\nimport { getRequest, postRequest } from \"../helpers/http\";\n\ntype Entry = {\n  time: Date,\n  title: string,\n  content: string\n}\n\nfunction Blog({handleLoading}: setLoadingState) {\n  const [entries, setEntries] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [dataChanged, setDataChanged] = useState(\"\");\n\n  const [showWriteEntry, setShowWriteEntry] = useState(false);\n\n  async function handleErrors(response: any) {\n    if (!response.ok) {\n      await response.json().then((error: any) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getBlogEntries();\n  }, [dataChanged]);\n\n  const createBlogEntry = (\n    data = {\n      title: title,\n      content: content,\n    }\n  ) => {\n    if (data.title === \"\" || data.content === \"\") {\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    postRequest(\"api/entry\", data)\n      .then(handleErrors)\n      .then((resp) => {\n        setDataChanged(resp);\n        showNotification(\"Blog entry saved!\");\n        setShowWriteEntry(false);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const getBlogEntries = () => {\n    handleLoading(true);\n    getRequest(\"api/entry\")\n      .then(handleErrors)\n      .then((resp) => {\n        resp.reverse();\n        setEntries(resp);\n        handleLoading(false);\n      })\n      .catch((error) => {\n        if (error.message === \"authFailed\") {\n          localStorage.removeItem(\"token\");\n\n          showNotification(\"Session expired or token invalid. Please log in.\", Type.error);\n\n          setTimeout(() => {\n            window.location.href = \"/login\";\n          }, 2000);\n          return;\n        }\n\n        showNotification(error.message, Type.error);\n        handleLoading(false);\n      });\n  };\n\n  function formatDate(date: Date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [day, month, year].join(\".\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Tommycodes Blog - Overview</title>\n      </Helmet>\n      <div className=\"main\">\n        {isAdmin() && (\n          <div className=\"\">\n            <button\n              onClick={() => setShowWriteEntry(!showWriteEntry)}\n              className=\"blog-entry__button\"\n            >\n              <FontAwesomeIcon icon={faPen} /> Write entry\n            </button>\n            {showWriteEntry && (\n              <>\n                <label>Title of entry</label>\n                <input\n                  type=\"text\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n                <label>Content of entry</label>\n                <FroalaEditor\n                  config={froalaConfiguration}\n                  tag=\"textarea\"\n                  onModelChange={(model: any) => setContent(model)}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"success\"\n                  onClick={() => createBlogEntry()}\n                >\n                  <FontAwesomeIcon icon={faSave} /> Publish entry\n                </button>\n              </>\n            )}\n          </div>\n        )}\n\n        {entries.length === 0 && <h2>No blog post so far ...</h2>}\n        {entries.map((entry: Entry) => {\n          var entryDate = formatDate(entry.time);\n          return (\n            <div key={entry.title} className=\"blog-entry\">\n              <div className=\"blog-entry__meta\">\n                <h2>{entry.title}</h2>\n                <div>Written on {entryDate}</div>\n              </div>\n              <div className=\"blog-entry__content\" dangerouslySetInnerHTML={{ __html: entry.content }}></div>\n            </div>\n          );\n        })}\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\n\n\nconst froalaConfiguration = {\n  docId: \"froala-editor\",\n  toolbarButtons: [\n    \"fullscreen\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strikeThrough\",\n    \"subscript\",\n    \"superscript\",\n    \"|\",\n    \"paragraphFormat\",\n    \"align\",\n    \"formatOL\",\n    \"formatUL\",\n    \"outdent\",\n    \"indent\",\n    \"quote\",\n    \"-\",\n    \"insertLink\",\n    \"insertImage\",\n    \"insertTable\",\n    \"|\",\n    \"fontAwesome\",\n    \"specialCharacters\",\n    \"insertHR\",\n    \"selectAll\",\n    \"clearFormatting\",\n    \"html\",\n    \"|\",\n    \"undo\",\n    \"redo\",\n  ],\n  quickInsertTags: [\"p\", \"div\", \"h1\", \"h2\", \"h3\"],\n}\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/tommyCodes.ee0b293c.svg\";","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport LoadingIndicator from \"./LoadingIndicator/LoadingIndicator\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { isAdmin } from './helpers/userRole';\n\nimport Login from \"./Login/Login\";\nimport Profile from \"./Profile/Profile\";\nimport UserManagement from \"./UserManagement/UserManagement\";\nimport Blog from \"./Blog/Blog\";\n\nimport tommyCodesLogo from \"./assets/tommyCodes.svg\";\nimport { showNotification } from \"./helpers/toast\";\n\nexport type setLoadingState = {\n  handleLoading: (a: boolean) => void\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [token, setToken] = useState<String | null>(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    showNotification(\"Logged out successfully! Redirecting to home.\")\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 2000);\n  };\n\n  return (\n    <Router>\n      <LoadingIndicator isLoading={isLoading} />\n      <header>\n        <div className=\"logo-holder\">\n          <NavLink activeClassName=\"active\" to=\"/\" exact>\n            <img src={tommyCodesLogo} alt=\"Tommy Codes Blog\" />\n          </NavLink>\n        </div>\n        <div className=\"main-navigation\">\n          <nav>\n            <ul>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/\" exact>\n                  Blog\n                </NavLink>\n              </li>\n              {!token && (\n                <li className=\"logout\">\n                  <NavLink activeClassName=\"active\" to=\"/login\" exact>\n                    Login\n                  </NavLink>\n                </li>\n              )}\n              {token && (\n                <>\n                  <li>\n                    <NavLink activeClassName=\"active\" to=\"/profile\">\n                      Profile\n                    </NavLink>\n                  </li>\n                  {isAdmin() && (\n                    <li>\n                      <NavLink activeClassName=\"active\" to=\"/userManagement\">\n                        Users\n                      </NavLink>\n                    </li>\n                  )}\n                  <li className=\"logout\">\n                    <button onClick={() => handleLogout()}>\n                      Logout\n                    </button>\n                  </li>\n                </>\n              )}\n            </ul>\n          </nav>\n          <ToastContainer />\n        </div>\n      </header>\n      {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/\" exact>\n          <Blog handleLoading={setIsLoading} />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/userManagement\">\n          <UserManagement handleLoading={setIsLoading} />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}