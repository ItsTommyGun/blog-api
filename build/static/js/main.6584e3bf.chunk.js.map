{"version":3,"sources":["helpers/userRole.js","helpers/port.js","Login/Login.js","Profile/Profile.js","helpers/toast.ts","helpers/http.tsx","UserManagement/UserManagement.tsx","Blog/Blog.js","assets/tommyCodes.svg","App.js","reportWebVitals.js","index.js"],"names":["isAdmin","token","localStorage","getItem","jwt_decode","role","getUserRole","toUpperCase","PORT","process","Login","useState","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","message","setMessage","setLoggedIn","handleErrors","response","a","ok","json","then","text","Error","error","useEffect","handleLogin","e","data","password","email","validity","target","parentElement","checkValidity","reportValidity","preventDefault","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","resp","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Slide","setItem","setTimeout","window","location","catch","console","log","className","autoComplete","onSubmit","type","name","required","placeholder","onLoad","value","onChange","minLength","onClick","style","float","handleRegister","Profile","Type","setName","surname","setSurname","city","setCity","changedName","setChangedName","changedSurname","setChangedSurname","changedCity","setChangedCity","authStatus","getProfileData","Authorization","removeItem","defaultValue","profile","handleProfileUpdate","icon","faSave","postRequest","url","showNotification","closingTime","UserManagement","setEmail","setPassword","setRole","users","setUsers","changed","setChanged","getUsers","getRequest","removeUser","userId","deleteRequest","id","form","createNewUser","map","user","_id","faUserSlash","Blog","entries","setEntries","title","setTitle","content","setContent","dataChanged","setDataChanged","showWriteEntry","setShowWriteEntry","getBlogEntries","reverse","right","top","faPen","config","docId","tag","onModelChange","model","alert","createBlogEntry","entry","entryDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","time","dangerouslySetInnerHTML","__html","App","setToken","activeClassName","to","exact","src","tommyCodesLogo","alt","href","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6584e3bf.chunk.js","sourcesContent":["import jwt_decode from \"jwt-decode\";\n\nexport function getUserRole() {\n    var token = localStorage.getItem(\"token\");\n    if(!token) {\n        return '';\n    }\n    var decoded = jwt_decode(token);\n    return decoded.role;\n}\n\nexport function isAdmin() {\n  var currentUserRole = getUserRole();\n  return currentUserRole.toUpperCase() === \"ADMIN\";\n}\n\nexport default isAdmin;","const PORT = process.env.PORT || 3001;\n\nexport default PORT;","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\n\nimport PORT from \"../helpers/port\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Login() {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((text) => {\n        throw Error(text.error);\n      });\n    }\n    return response.json();\n  }\n\n  const handleRegister = (\n    e,\n    data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\") {\n      // setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      // setMessage(\"\");\n    }\n    fetch(`http://localhost:${PORT}/api/auth/register`, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then(() => {\n        toast.success(\"User was successfully registered!\", {\n          position: \"bottom-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      })\n      .catch((error) => {\n        console.log(\"CATCHING ERROR reg\");\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const handleLogin = (\n    e,\n    data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    const validity = e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\" || !validity) {\n      setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      setMessage(\"\");\n    }\n    fetch(`http://localhost:${PORT}/api/auth/login`, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        toast.success(\"Logged in!\", {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n        localStorage.setItem(\"token\", resp.token);\n        //setLoggedIn(true);\n\n        setTimeout(() => {\n          window.location = \"/\";\n        }, 1500);\n      })\n      .catch((error) => {\n        console.log(\"CATCHING ERROR login\");\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"login\">\n        <div className=\"welcome-headline\">\n          <h2>Welcome to Tommycodes</h2>\n        </div>\n        <div className=\"login-container\">\n          <form autoComplete=\"on\" onSubmit={(e) => handleLogin(e)}>\n            <label>E-Mail</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"example@domain.com\"\n              onLoad={(e) => setRegisterEmail(e.target.value)}\n              onChange={(e) => setRegisterEmail(e.target.value)}\n            />\n\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              placeholder=\"********\"\n              minLength=\"6\"\n              onLoad={(e) => setRegisterPassword(e.target.value)}\n              onChange={(e) => setRegisterPassword(e.target.value)}\n            />\n\n            <span className=\"error-message error-message--small\">\n              {message}\n            </span>\n\n            <button onClick={(e) => handleLogin(e)}>Login</button>\n            <button\n              style={{ float: \"right\" }}\n              onClick={(e) => handleRegister(e)}\n            >\n              Register\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport PORT from \"../helpers/port\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Profile() {\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const [changedName, setChangedName] = useState(\"\");\n  const [changedSurname, setChangedSurname] = useState(\"\");\n  const [changedCity, setChangedCity] = useState(\"\");\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((error) => {\n        if(error.authStatus === 'failed') {\n          throw Error(\"authFailed\")\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getProfileData();\n  }, []);\n\n  const getProfileData = () => {\n    if (name !== \"\") return;\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/profile`, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.name);\n        setSurname(resp.surname);\n        setCity(resp.city);\n        localStorage.setItem(\"city\", resp.city);\n      })\n      .catch((error) => {\n        \n        if(error.message === 'authFailed') {\n          localStorage.removeItem(\"token\");\n\n          toast.error(\"Session expired or token invalid. Please log in.\", {\n            position: \"bottom-center\",\n            autoClose: 1500,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n            transition: Slide,\n          });\n\n          setTimeout(() => {\n            window.location = \"/\";\n          }, 2000);\n          return;\n        }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const handleProfileUpdate = (\n    data = { name: changedName, surname: changedSurname, city: changedCity }\n  ) => {\n    if (data.name === \"\") {\n      data.name = name;\n    }\n    if (data.surname === \"\") {\n      data.surname = surname;\n    }\n    if (data.city === \"\") {\n      data.city = city;\n    }\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/profile`, {\n      method: \"PUT\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.profile.name);\n        setSurname(resp.profile.surname);\n        toast.success(resp.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Your profile</h2>\n\n        <div className=\"card\">\n          <p>\n            <label>Name:</label>\n            <input\n              defaultValue={name}\n              onChange={(e) => setChangedName(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>Surname:</label>\n            <input\n              defaultValue={surname}\n              onChange={(e) => setChangedSurname(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>City:</label>\n            <input\n              defaultValue={city}\n              onChange={(e) => setChangedCity(e.target.value)}\n            />\n          </p>\n\n          <button onClick={() => handleProfileUpdate()}>\n            <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n          </button>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import { toast, Slide } from \"react-toastify\";\n\nexport enum Type {\n    \"error\",\n    \"success\"\n}\n\nexport function showNotification(message: string, type?: Type, closingTime = 2000) {\n    switch (type) {\n        case Type.success:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        case Type.error:\n            toast.error(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        default:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n    }\n};","import PORT from \"./port\";\n\ntype Data = {\n  [key: string]: string;\n};\n\nexport function getTokenFromStorage() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function postRequest(url: string, data: Data) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nexport function getRequest(url: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n\nexport function deleteRequest(url: string, userId: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}/${userId}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport { deleteRequest, getRequest, postRequest } from \"../helpers/http\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { showNotification, Type } from \"../helpers/toast\";\n\ntype User = {\n  email: string,\n  role: string,\n  _id: string\n}\n\nfunction UserManagement() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  \n  const [users, setUsers] = useState([]);\n  const [changed, setChanged] = useState('');\n\n  async function handleErrors(response: Response) {\n    if (!response.ok) {\n      await response.json().then((error: any) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getUsers();    \n  }, [changed]);\n\n  const createNewUser = (e: any, data = { email, password, role }) => {\n    e.target.form.checkValidity();\n    e.target.form.reportValidity();\n    e.preventDefault();\n\n    if(data.email === '' || data.password === '' || data.role === '') {\n        return;\n    }\n\n    const endpoint = \"api/auth/register\";\n\n    postRequest(endpoint, data)\n      .then(handleErrors)\n      .then((resp) => {\n        setChanged(resp);\n        showNotification(\"User was successfully registered\");\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const getUsers = () => {\n    const endpoint = \"api/users\";\n\n    getRequest(endpoint)\n      .then(handleErrors)\n      .then((resp) => {\n        setUsers(resp)\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  }\n\n  const removeUser = (userId: User[\"_id\"]) => {\n    const endpoint = \"api/users\";\n\n    deleteRequest(endpoint, userId)\n      .then(handleErrors)\n      .then((resp) => {\n        showNotification(resp.message);\n        setChanged(resp);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Create new user</h2>\n\n        <form>\n          <div className=\"card\">\n            <p>\n              <label>User E-Mail:</label>\n              <input\n                type=\"email\"\n                required\n                placeholder=\"example@mail.com\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Password (temporary):</label>\n              <input\n                type=\"text\"\n                required\n                placeholder=\"******\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Role:</label>\n              <select\n                name=\"role\"\n                onChange={(e) => setRole(e.target.value)}\n                defaultValue={\"Please choose a role\"}\n                id=\"role\"\n                required\n              >\n                <option value=\"\">\n                  Please choose a role\n                </option>\n                <option id=\"admin\">\n                  Admin\n                </option>\n                <option id=\"editor\">\n                  Editor\n                </option>\n                <option id=\"writer\">\n                  Writer\n                </option>\n              </select>\n            </p>\n\n            <button onClick={(e) => createNewUser(e)}>\n              <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n            </button>\n          </div>\n        </form>\n      \n        <hr />\n        <h2>All registered users</h2>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Role</td>\n              <td>Remove</td>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user: User) => {\n              return (\n                <tr key={user.email}>\n                  <td>{user.email}</td>\n                  <td>{user.role}</td>\n                  <td>\n                    <button onClick={() => removeUser(user._id)}><FontAwesomeIcon icon={faUserSlash} /> Remove</button>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default UserManagement;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport PORT from \"../helpers/port\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSave, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport isAdmin from \"../helpers/userRole\";\n\n// Require Editor JS files.\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\n\n// Require Editor CSS files.\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\n\n// Require Font Awesome.\n//import 'font-awesome/css/font-awesome.css';\n\nimport FroalaEditor from \"react-froala-wysiwyg\";\n\n// Include special components if required.\n// import FroalaEditorView from 'react-froala-wysiwyg/FroalaEditorView';\n// import FroalaEditorA from 'react-froala-wysiwyg/FroalaEditorA';\n// import FroalaEditorButton from 'react-froala-wysiwyg/FroalaEditorButton';\n// import FroalaEditorImg from 'react-froala-wysiwyg/FroalaEditorImg';\n// import FroalaEditorInput from 'react-froala-wysiwyg/FroalaEditorInput';\n\nfunction Blog() {\n  const [entries, setEntries] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [dataChanged, setDataChanged] = useState(\"\");\n\n  const [showWriteEntry, setShowWriteEntry] = useState(false);\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((error) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getBlogEntries();\n  }, [dataChanged]);\n\n  const createBlogEntry = (\n    data = {\n      title: title,\n      content: content,\n    }\n  ) => {\n    if (data.title === \"\" || data.content === \"\") {\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/entry`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setDataChanged(resp);\n        alert(\"worked!\", resp);\n        setShowWriteEntry(false);\n      })\n      .catch((error) => {\n        // if(error.message === 'authFailed') {\n        //   localStorage.removeItem(\"token\");\n\n        //   toast.error(\"Session expired or token invalid. Please log in.\", {\n        //     position: \"bottom-center\",\n        //     autoClose: 1500,\n        //     hideProgressBar: true,\n        //     closeOnClick: true,\n        //     pauseOnHover: false,\n        //     draggable: true,\n        //     progress: undefined,\n        //     transition: Slide,\n        //   });\n\n        //   setTimeout(() => {\n        //     window.location = \"/\";\n        //   }, 2000);\n        //   return;\n        // }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const getBlogEntries = () => {\n    fetch(`http://localhost:${PORT}/api/entry`, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n        .then(handleErrors)\n        .then((resp) => {\n            resp.reverse();\n            setEntries(resp);\n        })\n      .catch((error) => {\n        // if(error.message === 'authFailed') {\n        //   localStorage.removeItem(\"token\");\n\n        //   toast.error(\"Session expired or token invalid. Please log in.\", {\n        //     position: \"bottom-center\",\n        //     autoClose: 1500,\n        //     hideProgressBar: true,\n        //     closeOnClick: true,\n        //     pauseOnHover: false,\n        //     draggable: true,\n        //     progress: undefined,\n        //     transition: Slide,\n        //   });\n\n        //   setTimeout(() => {\n        //     window.location = \"/\";\n        //   }, 2000);\n        //   return;\n        // }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [day, month, year].join(\".\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Welcome to Tommy's Blog</h2>\n        {isAdmin() && (\n          <div className=\"blog-entry-button\">\n            <button\n              onClick={() => setShowWriteEntry(!showWriteEntry)}\n              style={{ position: \"absolute\", right: \"30px\", top: \"30px\" }}\n            >\n                <FontAwesomeIcon icon={faPen} /> Write entry\n            </button>\n            {showWriteEntry && (\n              <>\n                <label>Title of entry</label>\n                <input\n                  type=\"text\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n                <label>Content of entry</label>\n                <FroalaEditor\n                  config={{ docId: \"froala-editor\" }}\n                  tag=\"textarea\"\n                  onModelChange={(model) => setContent(model)}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"success\"\n                  onClick={() => createBlogEntry()}\n                >\n                    <FontAwesomeIcon icon={faSave} /> Publish entry\n                </button>\n              </>\n            )}\n          </div>\n        )}\n\n        {entries.map((entry) => {\n          var entryDate = formatDate(entry.time);\n          return (\n            <div key={entry.time} className=\"blog-entry\">\n              <h2>{entry.title}</h2>\n              <p>Written on {entryDate}</p>\n              <div dangerouslySetInnerHTML={{ __html: entry.content }}></div>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/tommyCodes.ee0b293c.svg\";","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { isAdmin } from './helpers/userRole';\n\nimport Login from \"./Login/Login\";\nimport Profile from \"./Profile/Profile\";\nimport UserManagement from \"./UserManagement/UserManagement\";\nimport Blog from \"./Blog/Blog\";\n\nimport tommyCodesLogo from \"./assets/tommyCodes.svg\";\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n\n    toast.success(\"Logged out successfully! Redirecting to home.\", {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      transition: Slide,\n    });\n\n    setTimeout(() => {\n      window.location = \"/\";\n    }, 2000);\n  };\n\n  return (\n    <Router>\n      <header>\n        <div className=\"logo-holder\">\n          <NavLink activeClassName=\"active\" to=\"/\" exact>\n            <img src={tommyCodesLogo} alt=\"Tommy Codes Blog\" />\n          </NavLink>\n        </div>\n        <div className=\"main-navigation\">\n          <nav>\n            <ul>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/\" exact>\n                  Blog\n                </NavLink>\n              </li>\n              {!token && (\n                <li className=\"logout\">\n                  <NavLink activeClassName=\"active\" to=\"/login\" exact>\n                    Login\n                  </NavLink>\n                </li>\n              )}\n              {token && (\n                <>\n                  <li>\n                    <NavLink activeClassName=\"active\" to=\"/profile\">\n                      Profile\n                    </NavLink>\n                  </li>\n                  {isAdmin() && (\n                    <li>\n                      <NavLink activeClassName=\"active\" to=\"/userManagement\">\n                        Users\n                      </NavLink>\n                    </li>\n                  )}\n                  <li className=\"logout\">\n                    <button href=\"#\" onClick={() => handleLogout()}>\n                      Logout\n                    </button>\n                  </li>\n                </>\n              )}\n            </ul>\n          </nav>\n          <ToastContainer />\n        </div>\n      </header>\n      {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/\" exact>\n          <Blog />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/userManagement\">\n          <UserManagement />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}