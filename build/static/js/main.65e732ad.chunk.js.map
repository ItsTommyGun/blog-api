{"version":3,"sources":["LoadingIndicator/loading.svg","LoadingIndicator/LoadingIndicator.js","helpers/userRole.js","helpers/port.js","Login/Login.js","Profile/Profile.js","helpers/toast.ts","helpers/http.tsx","UserManagement/UserManagement.tsx","Blog/Blog.js","assets/tommyCodes.svg","App.js","reportWebVitals.js","index.js"],"names":["LoadingIndicator","isLoading","className","src","loadingSpinner","alt","isAdmin","token","localStorage","getItem","jwt_decode","role","getUserRole","toUpperCase","PORT","process","Login","useState","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","message","setMessage","setLoggedIn","handleErrors","response","a","ok","json","then","text","Error","error","useEffect","handleLogin","e","data","password","email","validity","target","parentElement","checkValidity","reportValidity","preventDefault","console","log","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","resp","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Slide","setItem","setTimeout","window","location","catch","Helmet","charSet","autoComplete","onSubmit","type","name","required","placeholder","onLoad","value","onChange","minLength","onClick","style","float","handleRegister","Profile","Type","setName","surname","setSurname","city","setCity","changedName","setChangedName","changedSurname","setChangedSurname","changedCity","setChangedCity","authStatus","getProfileData","Authorization","removeItem","defaultValue","profile","handleProfileUpdate","icon","faSave","postRequest","url","showNotification","closingTime","UserManagement","handleLoading","setEmail","setPassword","setRole","users","setUsers","changed","setChanged","getUsers","getRequest","removeUser","userId","deleteRequest","id","form","createNewUser","map","user","_id","faUserSlash","Blog","entries","setEntries","title","setTitle","content","setContent","dataChanged","setDataChanged","showWriteEntry","setShowWriteEntry","getBlogEntries","reverse","faPen","config","docId","toolbarButtons","quickInsertTags","tag","onModelChange","model","alert","createBlogEntry","entry","entryDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","time","dangerouslySetInnerHTML","__html","App","setIsLoading","setToken","loadingState","activeClassName","to","exact","tommyCodesLogo","href","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ifAAe,G,OAAA,IAA0B,qC,OCS1BA,MANf,YAAwC,IAAbC,EAAY,EAAZA,UACvB,OAAO,qBAAKC,UAAS,4BAAuBD,EAAY,UAAY,IAA7D,SACH,qBAAKC,UAAS,6BAAgCC,IAAKC,EAAgBC,IAAI,mB,wBCMxE,SAASC,IAEd,MAAyC,UAXpC,WACH,IAAIC,EAAQC,aAAaC,QAAQ,SACjC,OAAIF,EAGUG,YAAWH,GACVI,KAHJ,GAOSC,GACCC,cAGVP,Q,yBCdAQ,G,MAFFC,mIAAYD,MAAQ,M,QC2MlBE,MAlMf,WACE,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,oBAAS,GAAzC,mBAAiBO,GAAjB,WAJe,SAcAC,EAdA,8EAcf,WAA4BC,GAA5B,SAAAC,EAAA,yDACOD,EAASE,GADhB,gCAEUF,EAASG,OAAOC,MAAK,SAACC,GAC1B,MAAMC,MAAMD,EAAKE,UAHvB,gCAMSP,EAASG,QANlB,4CAde,sBAMfK,qBAAU,WACM1B,aAAaC,QAAQ,UAGjCe,GAAY,KAEb,IAWH,IAuDMW,EAAc,SAClBC,GAKI,IAJJC,EAIG,uDAJI,CACLC,SAAUlB,EACVmB,MAAOrB,GAGHsB,EAAWJ,EAAEK,OAAOC,cAAcC,gBACxCP,EAAEK,OAAOC,cAAcE,iBACvBR,EAAES,iBACiB,KAAfR,EAAKE,OAAkC,KAAlBF,EAAKC,UAAoBE,GAIhDjB,EAAW,IAEbuB,QAAQC,IACN,uCADF,2BAEsBjC,EAFtB,oBAIAkC,MAAM,oBAAD,OAAqBlC,EAArB,mBAA4C,CAC/CmC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAUnB,KAEpBP,KAAKL,GACLK,MAAK,SAAC2B,GACLC,IAAMC,QAAQ,aAAc,CAC1BC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,MAEd7D,aAAa8D,QAAQ,QAASb,EAAKlD,OAGnCgE,YAAW,WACTC,OAAOC,SAAW,MACjB,SAEJC,OAAM,SAACzC,GACNa,QAAQC,IAAI,wBACZW,IAAMzB,MAAMA,EAAMX,QAAS,CACzBsC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,UAjDhB9C,EAAW,8CAsDf,OACE,sBAAKrB,UAAU,MAAf,UACE,eAACyE,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,+DAEF,sBAAK1E,UAAU,QAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,yDAEF,qBAAKA,UAAU,kBAAf,SACE,uBAAM2E,aAAa,KAAKC,SAAU,SAAC1C,GAAD,OAAOD,EAAYC,IAArD,UACE,2CACA,uBACE2C,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRC,YAAY,qBACZC,OAAQ,SAAC/C,GAAD,OAAOjB,EAAiBiB,EAAEK,OAAO2C,QACzCC,SAAU,SAACjD,GAAD,OAAOjB,EAAiBiB,EAAEK,OAAO2C,UAG7C,6CACA,uBACEL,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRC,YAAY,WACZI,UAAU,IACVH,OAAQ,SAAC/C,GAAD,OAAOf,EAAoBe,EAAEK,OAAO2C,QAC5CC,SAAU,SAACjD,GAAD,OAAOf,EAAoBe,EAAEK,OAAO2C,UAGhD,sBAAMlF,UAAU,qCAAhB,SACGoB,IAGH,wBAAQiE,QAAS,SAACnD,GAAD,OAAOD,EAAYC,IAApC,mBACA,wBACEoD,MAAO,CAAEC,MAAO,SAChBF,QAAS,SAACnD,GAAD,OAhKE,SACrBA,GAKI,IAJJC,EAIG,uDAJI,CACLC,SAAUlB,EACVmB,MAAOrB,GAGTkB,EAAEK,OAAOC,cAAcC,gBACvBP,EAAEK,OAAOC,cAAcE,iBACvBR,EAAES,iBACiB,KAAfR,EAAKE,OAAkC,KAAlBF,EAAKC,UAM9BU,MAAM,oBAAD,OAAqBlC,EAArB,sBAA+C,CAClDmC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAUnB,KAEpBP,KAAKL,GACLK,MAAK,WACJ4B,IAAMC,QAAQ,oCAAqC,CACjDC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,SAGfK,OAAM,SAACzC,GACNa,QAAQC,IAAI,sBACZW,IAAMzB,MAAMA,EAAMX,QAAS,CACzBsC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,SA8GQqB,CAAetD,IAFjC,kC,gBClBGuD,IC1KHC,ED0KGD,EAlKf,WACE,MAAwB1E,mBAAS,IAAjC,mBAAO+D,EAAP,KAAaa,EAAb,KACA,EAA8B5E,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAAwB9E,mBAAS,IAAjC,mBAAO+E,EAAP,KAAaC,EAAb,KAEA,EAAsChF,mBAAS,IAA/C,mBAAOiF,EAAP,KAAoBC,EAApB,KACA,EAA4ClF,mBAAS,IAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAAsCpF,mBAAS,IAA/C,mBAAOqF,EAAP,KAAoBC,EAApB,KAPiB,SASF9E,EATE,8EASjB,WAA4BC,GAA5B,SAAAC,EAAA,yDACOD,EAASE,GADhB,gCAEUF,EAASG,OAAOC,MAAK,SAACG,GAC1B,GAAwB,WAArBA,EAAMuE,WACP,MAAMxE,MAAM,cAEd,MAAMA,MAAMC,EAAMX,YANxB,gCASSI,EAASG,QATlB,4CATiB,sBAqBjBK,qBAAU,WACRuE,MACC,IAEH,IAAMA,EAAiB,WACrB,GAAa,KAATzB,EAAJ,CACA,IAAMzE,EAAQC,aAAaC,QAAQ,SACnCuC,MAAM,oBAAD,OAAqBlC,EAArB,gBAAyC,CAC5CmC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,sBAGjBuB,KAAKL,GACLK,MAAK,SAAC2B,GACLoC,EAAQpC,EAAKuB,MACbe,EAAWtC,EAAKqC,SAChBG,EAAQxC,EAAKuC,MACbxF,aAAa8D,QAAQ,OAAQb,EAAKuC,SAEnCtB,OAAM,SAACzC,GAEN,GAAqB,eAAlBA,EAAMX,QAiBP,OAhBAd,aAAamG,WAAW,SAExBjD,IAAMzB,MAAM,mDAAoD,CAC9D2B,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,WAGdE,YAAW,WACTC,OAAOC,SAAW,MACjB,KAILf,IAAMzB,MAAMA,EAAMX,QAAS,CACzBsC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,WAiDpB,OACE,sBAAKnE,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,8CAEA,sBAAKA,UAAU,OAAf,UACE,8BACE,0CACA,uBACE0G,aAAc5B,EACdK,SAAU,SAACjD,GAAD,OAAO+D,EAAe/D,EAAEK,OAAO2C,aAG7C,8BACE,6CACA,uBACEwB,aAAcd,EACdT,SAAU,SAACjD,GAAD,OAAOiE,EAAkBjE,EAAEK,OAAO2C,aAGhD,8BACE,0CACA,uBACEwB,aAAcZ,EACdX,SAAU,SAACjD,GAAD,OAAOmE,EAAenE,EAAEK,OAAO2C,aAI7C,yBAAQG,QAAS,kBAxEG,WAEtB,IADJlD,EACG,uDADI,CAAE2C,KAAMkB,EAAaJ,QAASM,EAAgBJ,KAAMM,GAEzC,KAAdjE,EAAK2C,OACP3C,EAAK2C,KAAOA,GAEO,KAAjB3C,EAAKyD,UACPzD,EAAKyD,QAAUA,GAEC,KAAdzD,EAAK2D,OACP3D,EAAK2D,KAAOA,GAEd,IAAMzF,EAAQC,aAAaC,QAAQ,SACnCuC,MAAM,oBAAD,OAAqBlC,EAArB,gBAAyC,CAC5CmC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,oBAElB+C,KAAMC,KAAKC,UAAUnB,KAEpBP,KAAKL,GACLK,MAAK,SAAC2B,GACLoC,EAAQpC,EAAKoD,QAAQ7B,MACrBe,EAAWtC,EAAKoD,QAAQf,SACxBpC,IAAMC,QAAQF,EAAKnC,QAAS,CAC1BsC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,SAGfK,OAAM,SAACzC,GACNa,QAAQC,IAAI,SAAUd,MAgCG6E,IAAvB,UACE,cAAC,IAAD,CAAiBC,KAAMC,MADzB,oCAKJ,cAAC,IAAD,QE7JC,SAASC,EAAYC,EAAa7E,GACvC,IAAM9B,EAAQC,aAAaC,QAAQ,SACnC,OAAOuC,MAAM,oBAAD,OAAqBlC,EAArB,YAA6BoG,GAAO,CAC9CjE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,oBAElB+C,KAAMC,KAAKC,UAAUnB,KDdlB,SAAS8E,EAAiB7F,EAAiByD,GAAkC,IAArBqC,EAAoB,uDAAN,IACzE,OAAQrC,GACJ,KAAKa,EAAKjC,QACND,IAAMC,QAAQrC,EAAS,CACnBsC,SAAU,gBACVC,UAAWuD,EACXtD,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,MAEhB,MACJ,KAAKuB,EAAK3D,MACNyB,IAAMzB,MAAMX,EAAS,CACjBsC,SAAU,gBACVC,UAAWuD,EACXtD,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,MAEhB,MACJ,QACIX,IAAMC,QAAQrC,EAAS,CACnBsC,SAAU,gBACVC,UAAWuD,EACXtD,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,Q,SAxChBuB,O,iBAAAA,I,sBAAAA,M,KEgLGyB,MAjKf,YAA+C,IAAtBC,EAAqB,EAArBA,cACvB,EAA0BrG,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcgF,EAAd,KACA,EAAgCtG,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBkF,EAAjB,KACA,EAAwBvG,mBAAS,IAAjC,mBAAON,EAAP,KAAa8G,EAAb,KAEA,EAA0BxG,mBAAS,IAAnC,mBAAOyG,EAAP,KAAcC,EAAd,KACA,EAA8B1G,mBAAS,IAAvC,mBAAO2G,EAAP,KAAgBC,EAAhB,KAN4C,SAQ7BpG,EAR6B,8EAQ5C,WAA4BC,GAA5B,SAAAC,EAAA,yDACOD,EAASE,GADhB,gCAEUF,EAASG,OAAOC,MAAK,SAACG,GAC1B,GAAyB,WAArBA,EAAMuE,WACR,MAAMxE,MAAM,cAEd,MAAMA,MAAMC,EAAMX,YANxB,gCASSI,EAASG,QATlB,4CAR4C,sBAoB5CK,qBAAU,WACR4F,MACC,CAACF,IAEJ,IAsBME,EAAW,WACfR,GAAc,IDvCX,SAAoBJ,GACzB,IAAM3G,EAAQC,aAAaC,QAAQ,SACnC,OAAOuC,MAAM,oBAAD,OAAqBlC,EAArB,YAA6BoG,GAAO,CAC9CjE,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,uBCiClBwH,CAFiB,aAGdjG,KAAKL,GACLK,MAAK,SAAC2B,GACLkE,EAASlE,GACT6D,GAAc,MAEf5C,OAAM,SAACzC,GACNkF,EAAiBlF,EAAMX,QAASsE,EAAK3D,OACrCqF,GAAc,OAIdU,EAAa,SAACC,IDxCf,SAAuBf,EAAae,GACzC,IAAM1H,EAAQC,aAAaC,QAAQ,SACnC,OAAOuC,MAAM,oBAAD,OAAqBlC,EAArB,YAA6BoG,EAA7B,YAAoCe,GAAU,CACxDhF,OAAQ,SACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,uBCkClB2H,CAFiB,YAEOD,GACrBnG,KAAKL,GACLK,MAAK,SAAC2B,GACL0D,EAAiB1D,EAAKnC,SACtBuG,EAAWpE,MAEZiB,OAAM,SAACzC,GACNkF,EAAiBlF,EAAMX,QAASsE,EAAK3D,WAI3C,OACE,sBAAK/B,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,iDAEA,+BACE,sBAAKA,UAAU,OAAf,UACE,8BACE,iDACA,uBACE6E,KAAK,QACLE,UAAQ,EACRC,YAAY,mBACZG,SAAU,SAACjD,GAAD,OAAOmF,EAASnF,EAAEK,OAAO2C,aAGvC,8BACE,0DACA,uBACEL,KAAK,OACLE,UAAQ,EACRC,YAAY,SACZG,SAAU,SAACjD,GAAD,OAAOoF,EAAYpF,EAAEK,OAAO2C,aAG1C,8BACE,0CACA,yBACEJ,KAAK,OACLK,SAAU,SAACjD,GAAD,OAAOqF,EAAQrF,EAAEK,OAAO2C,QAClCwB,aAAc,uBACduB,GAAG,OACHlD,UAAQ,EALV,UAOE,wBAAQG,MAAM,GAAd,kCAGA,wBAAQ+C,GAAG,QAAX,mBAGA,wBAAQA,GAAG,SAAX,oBAGA,wBAAQA,GAAG,SAAX,0BAMJ,yBAAQ5C,QAAS,SAACnD,GAAD,OArGL,SAACA,GAA8C,IAAtCC,EAAqC,uDAA9B,CAAEE,QAAOD,WAAU3B,QAKvD,GAJAyB,EAAEK,OAAO2F,KAAKzF,gBACdP,EAAEK,OAAO2F,KAAKxF,iBACdR,EAAES,iBAEgB,KAAfR,EAAKE,OAAkC,KAAlBF,EAAKC,UAAiC,KAAdD,EAAK1B,KAArD,CAMAsG,EAFiB,oBAEK5E,GACnBP,KAAKL,GACLK,MAAK,SAAC2B,GACLoE,EAAWpE,GACX0D,EAAiB,uCAElBzC,OAAM,SAACzC,GACNkF,EAAiBlF,EAAMX,QAASsE,EAAK3D,WAmFToG,CAAcjG,IAAtC,UACE,cAAC,IAAD,CAAiB2E,KAAMC,MADzB,mCAMJ,uBACA,sDACA,kCACE,gCACE,+BACE,sCACA,sCACA,6CAGJ,gCACGU,EAAMY,KAAI,SAACC,GACV,OACE,+BACE,6BAAKA,EAAKhG,QACV,6BAAKgG,EAAK5H,OACV,6BACE,yBAAQ4E,QAAS,kBAAMyC,EAAWO,EAAKC,MAAvC,UAA6C,cAAC,IAAD,CAAiBzB,KAAM0B,MAApE,iBAJKF,EAAKhG,kBAYxB,cAAC,IAAD,Q,qECmGSmG,MApPf,WACE,MAA8BzH,mBAAS,IAAvC,mBAAO0H,EAAP,KAAgBC,EAAhB,KAEA,EAA0B3H,mBAAS,IAAnC,mBAAO4H,EAAP,KAAcC,EAAd,KACA,EAA8B7H,mBAAS,IAAvC,mBAAO8H,EAAP,KAAgBC,EAAhB,KAEA,EAAsC/H,mBAAS,IAA/C,mBAAOgI,EAAP,KAAoBC,EAApB,KAEA,EAA4CjI,oBAAS,GAArD,mBAAOkI,EAAP,KAAuBC,EAAvB,KARc,SAUC3H,EAVD,8EAUd,WAA4BC,GAA5B,SAAAC,EAAA,yDACOD,EAASE,GADhB,gCAEUF,EAASG,OAAOC,MAAK,SAACG,GAC1B,GAAyB,WAArBA,EAAMuE,WACR,MAAMxE,MAAM,cAEd,MAAMA,MAAMC,EAAMX,YANxB,gCASSI,EAASG,QATlB,4CAVc,sBAsBdK,qBAAU,WACRmH,MACC,CAACJ,IAEJ,IA6DMI,EAAiB,WACrBrG,MAAM,oBAAD,OAAqBlC,EAArB,cAAuC,CAC1CmC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,sBAGjBvB,KAAKL,GACLK,MAAK,SAAC2B,GACLA,EAAK6F,UACLV,EAAWnF,MAEZiB,OAAM,SAACzC,GACN,GAAsB,eAAlBA,EAAMX,QAiBR,OAhBAd,aAAamG,WAAW,SAExBjD,IAAMzB,MAAM,mDAAoD,CAC9D2B,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,WAGdE,YAAW,WACTC,OAAOC,SAAW,WACjB,KAILf,IAAMzB,MAAMA,EAAMX,QAAS,CACzBsC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,UAiBpB,OACE,sBAAKnE,UAAU,MAAf,UACE,eAACyE,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,kEAEF,sBAAK1E,UAAU,OAAf,UACGI,KACC,sBAAKJ,UAAU,GAAf,UACE,yBACEqF,QAAS,kBAAM6D,GAAmBD,IAClCjJ,UAAU,qBAFZ,UAIE,cAAC,IAAD,CAAiB6G,KAAMwC,MAJzB,kBAMCJ,GACC,qCACE,mDACA,uBACEpE,KAAK,OACLM,SAAU,SAACjD,GAAD,OAAO0G,EAAS1G,EAAEK,OAAO2C,QACnCH,UAAQ,IAEV,qDACA,cAAC,IAAD,CACEuE,OAAQ,CACNC,MAAO,gBACPC,eAAgB,CACd,aACA,OACA,SACA,YACA,gBACA,YACA,cACA,IACA,kBACA,QACA,WACA,WACA,UACA,SACA,QACA,IACA,aACA,cACA,cACA,IACA,cACA,oBACA,WACA,YACA,kBACA,OACA,IACA,OACA,QAEFC,gBAAiB,CAAC,IAAK,MAAO,KAAM,KAAM,OAE5CC,IAAI,WACJC,cAAe,SAACC,GAAD,OAAWd,EAAWc,MAEvC,yBACE/E,KAAK,SACL7E,UAAU,UACVqF,QAAS,kBA5LD,WAKlB,IAJJlD,EAIG,uDAJI,CACLwG,MAAOA,EACPE,QAASA,GAGX,GAAmB,KAAf1G,EAAKwG,OAAiC,KAAjBxG,EAAK0G,QAA9B,CAGA,IAAMxI,EAAQC,aAAaC,QAAQ,SACnCuC,MAAM,oBAAD,OAAqBlC,EAArB,cAAuC,CAC1CmC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACPqD,cAAe,UAAYnG,EAC3B,eAAgB,oBAElB+C,KAAMC,KAAKC,UAAUnB,KAEpBP,KAAKL,GACLK,MAAK,SAAC2B,GACLyF,EAAezF,GACfsG,MAAM,UAAWtG,GACjB2F,GAAkB,MAEnB1E,OAAM,SAACzC,GAqBNyB,IAAMzB,MAAMA,EAAMX,QAAS,CACzBsC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,UAoIW2F,IAHjB,UAKE,cAAC,IAAD,CAAiBjD,KAAMC,MALzB,0BAYK,KAAZ2B,GAAkB,yDAElBA,EAAQL,KAAI,SAAC2B,GACZ,IAAIC,EA1FZ,SAAoBC,GAClB,IAAIC,EAAI,IAAIC,KAAKF,GACfG,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACbC,EAAON,EAAEO,cAKX,OAHIL,EAAMM,OAAS,IAAGN,EAAQ,IAAMA,GAChCE,EAAII,OAAS,IAAGJ,EAAM,IAAMA,GAEzB,CAACA,EAAKF,EAAOI,GAAMG,KAAK,KAiFTC,CAAWb,EAAMc,MACjC,OACE,sBAAsB7K,UAAU,aAAhC,UACE,sBAAKA,UAAU,mBAAf,UACE,6BAAK+J,EAAMpB,QACX,8CAAiBqB,QAEnB,qBAAKc,wBAAyB,CAAEC,OAAQhB,EAAMlB,WAC9C,yBANQkB,EAAMc,YAWtB,cAAC,IAAD,QC3QS,MAA0B,uCCyH1BG,MApGf,WACE,MAAkCjK,oBAAS,GAA3C,mBAAOhB,EAAP,KAAkBkL,EAAlB,KACA,EAA0BlK,mBAAS,IAAnC,mBAAOV,EAAP,KAAc6K,EAAd,KA0BA,OAzBAlJ,qBAAU,WACJ1B,aAAaC,QAAQ,UACvB2K,EAAS5K,aAAaC,QAAQ,YAE/B,IAsBD,eAAC,IAAD,WAEI,cAAC,EAAD,CAAkB4K,aAAcpL,IAElC,mCACE,qBAAKC,UAAU,cAAf,SACE,cAAC,IAAD,CAASoL,gBAAgB,SAASC,GAAG,IAAIC,OAAK,EAA9C,SACE,qBAAKrL,IAAKsL,EAAgBpL,IAAI,yBAGlC,sBAAKH,UAAU,kBAAf,UACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAASoL,gBAAgB,SAASC,GAAG,IAAIC,OAAK,EAA9C,qBAIAjL,GACA,oBAAIL,UAAU,SAAd,SACE,cAAC,IAAD,CAASoL,gBAAgB,SAASC,GAAG,SAASC,OAAK,EAAnD,qBAKHjL,GACC,qCACE,6BACE,cAAC,IAAD,CAAS+K,gBAAgB,SAASC,GAAG,WAArC,uBAIDjL,KACC,6BACE,cAAC,IAAD,CAASgL,gBAAgB,SAASC,GAAG,kBAArC,qBAKJ,oBAAIrL,UAAU,SAAd,SACE,wBAAQwL,KAAK,IAAInG,QAAS,kBA3D1C/E,aAAamG,WAAW,SAExBjD,IAAMC,QAAQ,gDAAiD,CAC7DC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,WAAYC,WAGdE,YAAW,WACTC,OAAOC,SAAW,MACjB,MA4Ca,8BAQV,cAAC,IAAD,UAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,KAAK,IAAIH,OAAK,EAArB,SACE,cAAC,EAAD,CAAMlE,cAAe6D,MAEvB,cAAC,IAAD,CAAOQ,KAAK,WAAZ,SACE,cAAC,EAAD,CAASrE,cAAe6D,MAE1B,cAAC,IAAD,CAAOQ,KAAK,kBAAZ,SACE,cAAC,EAAD,CAAgBrE,cAAe6D,MAEjC,cAAC,IAAD,CAAO7D,cAAe6D,EAAcQ,KAAK,SAAzC,SACE,cAAC,EAAD,aCtGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhK,MAAK,YAAkD,IAA/CiK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.65e732ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.e3474b89.svg\";","import './LoadingIndicator.scss';\nimport loadingSpinner from \"./loading.svg\";\n\nfunction LoadingIndicator({isLoading}) {\n    return <div className={`loading-indicator ${isLoading ? \"loading\" : ''}`}>\n        <img className={`loading-indicator__spinner`} src={loadingSpinner} alt=\"Loading ...\" />\n    </div>\n}\n\nexport default LoadingIndicator","import jwt_decode from \"jwt-decode\";\n\nexport function getUserRole() {\n    var token = localStorage.getItem(\"token\");\n    if(!token) {\n        return '';\n    }\n    var decoded = jwt_decode(token);\n    return decoded.role;\n}\n\nexport function isAdmin() {\n  var currentUserRole = getUserRole();\n  return currentUserRole.toUpperCase() === \"ADMIN\";\n}\n\nexport default isAdmin;","const PORT = process.env.PORT || 3001;\n\nexport default PORT;","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\n\nimport PORT from \"../helpers/port\";\n\nimport { toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Helmet } from \"react-helmet\";\n\nfunction Login() {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((text) => {\n        throw Error(text.error);\n      });\n    }\n    return response.json();\n  }\n\n  const handleRegister = (\n    e,\n    data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\") {\n      // setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      // setMessage(\"\");\n    }\n    fetch(`http://localhost:${PORT}/api/auth/register`, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then(() => {\n        toast.success(\"User was successfully registered!\", {\n          position: \"bottom-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      })\n      .catch((error) => {\n        console.log(\"CATCHING ERROR reg\");\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const handleLogin = (\n    e,\n    data = {\n      password: registerPassword,\n      email: registerEmail,\n    }\n  ) => {\n    const validity = e.target.parentElement.checkValidity();\n    e.target.parentElement.reportValidity();\n    e.preventDefault();\n    if (data.email === \"\" || data.password === \"\" || !validity) {\n      setMessage(\"Alle Felder müssen ausgefüllt sein.\");\n      return;\n    } else {\n      setMessage(\"\");\n    }\n    console.log(\n      \"fetching login, with route and port:\",\n      `http://localhost:${PORT}/api/auth/login`\n    );\n    fetch(`http://localhost:${PORT}/api/auth/login`, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        toast.success(\"Logged in!\", {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n        localStorage.setItem(\"token\", resp.token);\n        //setLoggedIn(true);\n\n        setTimeout(() => {\n          window.location = \"/\";\n        }, 1500);\n      })\n      .catch((error) => {\n        console.log(\"CATCHING ERROR login\");\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Tommycodes Blog - Login</title>\n      </Helmet>\n      <div className=\"login\">\n        <div className=\"welcome-headline\">\n          <h2>Welcome to Tommycodes</h2>\n        </div>\n        <div className=\"login-container\">\n          <form autoComplete=\"on\" onSubmit={(e) => handleLogin(e)}>\n            <label>E-Mail</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"example@domain.com\"\n              onLoad={(e) => setRegisterEmail(e.target.value)}\n              onChange={(e) => setRegisterEmail(e.target.value)}\n            />\n\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              placeholder=\"********\"\n              minLength=\"6\"\n              onLoad={(e) => setRegisterPassword(e.target.value)}\n              onChange={(e) => setRegisterPassword(e.target.value)}\n            />\n\n            <span className=\"error-message error-message--small\">\n              {message}\n            </span>\n\n            <button onClick={(e) => handleLogin(e)}>Login</button>\n            <button\n              style={{ float: \"right\" }}\n              onClick={(e) => handleRegister(e)}\n            >\n              Register\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport PORT from \"../helpers/port\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Profile() {\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const [changedName, setChangedName] = useState(\"\");\n  const [changedSurname, setChangedSurname] = useState(\"\");\n  const [changedCity, setChangedCity] = useState(\"\");\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((error) => {\n        if(error.authStatus === 'failed') {\n          throw Error(\"authFailed\")\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getProfileData();\n  }, []);\n\n  const getProfileData = () => {\n    if (name !== \"\") return;\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/profile`, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.name);\n        setSurname(resp.surname);\n        setCity(resp.city);\n        localStorage.setItem(\"city\", resp.city);\n      })\n      .catch((error) => {\n        \n        if(error.message === 'authFailed') {\n          localStorage.removeItem(\"token\");\n\n          toast.error(\"Session expired or token invalid. Please log in.\", {\n            position: \"bottom-center\",\n            autoClose: 1500,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n            transition: Slide,\n          });\n\n          setTimeout(() => {\n            window.location = \"/\";\n          }, 2000);\n          return;\n        }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const handleProfileUpdate = (\n    data = { name: changedName, surname: changedSurname, city: changedCity }\n  ) => {\n    if (data.name === \"\") {\n      data.name = name;\n    }\n    if (data.surname === \"\") {\n      data.surname = surname;\n    }\n    if (data.city === \"\") {\n      data.city = city;\n    }\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/profile`, {\n      method: \"PUT\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setName(resp.profile.name);\n        setSurname(resp.profile.surname);\n        toast.success(resp.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Your profile</h2>\n\n        <div className=\"card\">\n          <p>\n            <label>Name:</label>\n            <input\n              defaultValue={name}\n              onChange={(e) => setChangedName(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>Surname:</label>\n            <input\n              defaultValue={surname}\n              onChange={(e) => setChangedSurname(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>City:</label>\n            <input\n              defaultValue={city}\n              onChange={(e) => setChangedCity(e.target.value)}\n            />\n          </p>\n\n          <button onClick={() => handleProfileUpdate()}>\n            <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n          </button>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import { toast, Slide } from \"react-toastify\";\n\nexport enum Type {\n    \"error\",\n    \"success\"\n}\n\nexport function showNotification(message: string, type?: Type, closingTime = 2000) {\n    switch (type) {\n        case Type.success:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        case Type.error:\n            toast.error(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n            break;\n        default:\n            toast.success(message, {\n                position: \"bottom-center\",\n                autoClose: closingTime,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide,\n            });\n    }\n};","import PORT from \"./port\";\n\ntype Data = {\n  [key: string]: string;\n};\n\nexport function getTokenFromStorage() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function postRequest(url: string, data: Data) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nexport function getRequest(url: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}`, {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n\nexport function deleteRequest(url: string, userId: string) {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:${PORT}/${url}/${userId}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport { deleteRequest, getRequest, postRequest } from \"../helpers/http\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { showNotification, Type } from \"../helpers/toast\";\n\ntype User = {\n  email: string,\n  role: string,\n  _id: string\n}\n\nfunction UserManagement({handleLoading}: any) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  \n  const [users, setUsers] = useState([]);\n  const [changed, setChanged] = useState('');\n\n  async function handleErrors(response: Response) {\n    if (!response.ok) {\n      await response.json().then((error: any) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getUsers();    \n  }, [changed]);\n\n  const createNewUser = (e: any, data = { email, password, role }) => {\n    e.target.form.checkValidity();\n    e.target.form.reportValidity();\n    e.preventDefault();\n\n    if(data.email === '' || data.password === '' || data.role === '') {\n        return;\n    }\n\n    const endpoint = \"api/auth/register\";\n\n    postRequest(endpoint, data)\n      .then(handleErrors)\n      .then((resp) => {\n        setChanged(resp);\n        showNotification(\"User was successfully registered\");\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  };\n\n  const getUsers = () => {\n    handleLoading(true);\n    const endpoint = \"api/users\";\n\n    getRequest(endpoint)\n      .then(handleErrors)\n      .then((resp) => {\n        setUsers(resp);\n        handleLoading(false);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n        handleLoading(false);\n      });\n  }\n\n  const removeUser = (userId: User[\"_id\"]) => {\n    const endpoint = \"api/users\";\n\n    deleteRequest(endpoint, userId)\n      .then(handleErrors)\n      .then((resp) => {\n        showNotification(resp.message);\n        setChanged(resp);\n      })\n      .catch((error) => {\n        showNotification(error.message, Type.error);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h2>Create new user</h2>\n\n        <form>\n          <div className=\"card\">\n            <p>\n              <label>User E-Mail:</label>\n              <input\n                type=\"email\"\n                required\n                placeholder=\"example@mail.com\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Password (temporary):</label>\n              <input\n                type=\"text\"\n                required\n                placeholder=\"******\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </p>\n            <p>\n              <label>Role:</label>\n              <select\n                name=\"role\"\n                onChange={(e) => setRole(e.target.value)}\n                defaultValue={\"Please choose a role\"}\n                id=\"role\"\n                required\n              >\n                <option value=\"\">\n                  Please choose a role\n                </option>\n                <option id=\"admin\">\n                  Admin\n                </option>\n                <option id=\"editor\">\n                  Editor\n                </option>\n                <option id=\"writer\">\n                  Writer\n                </option>\n              </select>\n            </p>\n\n            <button onClick={(e) => createNewUser(e)}>\n              <FontAwesomeIcon icon={faSave} /> Änderungen speichern\n            </button>\n          </div>\n        </form>\n      \n        <hr />\n        <h2>All registered users</h2>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Role</td>\n              <td>Remove</td>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user: User) => {\n              return (\n                <tr key={user.email}>\n                  <td>{user.email}</td>\n                  <td>{user.role}</td>\n                  <td>\n                    <button onClick={() => removeUser(user._id)}><FontAwesomeIcon icon={faUserSlash} /> Remove</button>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default UserManagement;\n","import { useEffect, useState } from \"react\";\nimport \"../App.scss\";\nimport PORT from \"../helpers/port\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport isAdmin from \"../helpers/userRole\";\n\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\nimport \"froala-editor/js/plugins.pkgd.min.js\";\n\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\n\nimport \"froala-editor/css/plugins/table.min.css\";\nimport \"froala-editor/js/plugins/table.min.js\";\n\nimport \"froala-editor/js/plugins/lists.min.js\";\n\n// import \"froala-editor/js/plugins/paragraphFormat.min.js\";\n\nimport FroalaEditor from \"react-froala-wysiwyg\";\n\nimport { Helmet } from \"react-helmet\";\n\nfunction Blog() {\n  const [entries, setEntries] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [dataChanged, setDataChanged] = useState(\"\");\n\n  const [showWriteEntry, setShowWriteEntry] = useState(false);\n\n  async function handleErrors(response) {\n    if (!response.ok) {\n      await response.json().then((error) => {\n        if (error.authStatus === \"failed\") {\n          throw Error(\"authFailed\");\n        }\n        throw Error(error.message);\n      });\n    }\n    return response.json();\n  }\n\n  useEffect(() => {\n    getBlogEntries();\n  }, [dataChanged]);\n\n  const createBlogEntry = (\n    data = {\n      title: title,\n      content: content,\n    }\n  ) => {\n    if (data.title === \"\" || data.content === \"\") {\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:${PORT}/api/entry`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        setDataChanged(resp);\n        alert(\"worked!\", resp);\n        setShowWriteEntry(false);\n      })\n      .catch((error) => {\n        // if(error.message === 'authFailed') {\n        //   localStorage.removeItem(\"token\");\n\n        //   toast.error(\"Session expired or token invalid. Please log in.\", {\n        //     position: \"bottom-center\",\n        //     autoClose: 1500,\n        //     hideProgressBar: true,\n        //     closeOnClick: true,\n        //     pauseOnHover: false,\n        //     draggable: true,\n        //     progress: undefined,\n        //     transition: Slide,\n        //   });\n\n        //   setTimeout(() => {\n        //     window.location = \"/\";\n        //   }, 2000);\n        //   return;\n        // }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  const getBlogEntries = () => {\n    fetch(`http://localhost:${PORT}/api/entry`, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(handleErrors)\n      .then((resp) => {\n        resp.reverse();\n        setEntries(resp);\n      })\n      .catch((error) => {\n        if (error.message === \"authFailed\") {\n          localStorage.removeItem(\"token\");\n\n          toast.error(\"Session expired or token invalid. Please log in.\", {\n            position: \"bottom-center\",\n            autoClose: 1500,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n            transition: Slide,\n          });\n\n          setTimeout(() => {\n            window.location = \"/login\";\n          }, 2000);\n          return;\n        }\n\n        toast.error(error.message, {\n          position: \"bottom-center\",\n          autoClose: 1500,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n          transition: Slide,\n        });\n      });\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [day, month, year].join(\".\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Tommycodes Blog - Overview</title>\n      </Helmet>\n      <div className=\"main\">\n        {isAdmin() && (\n          <div className=\"\">\n            <button\n              onClick={() => setShowWriteEntry(!showWriteEntry)}\n              className=\"blog-entry__button\"\n            >\n              <FontAwesomeIcon icon={faPen} /> Write entry\n            </button>\n            {showWriteEntry && (\n              <>\n                <label>Title of entry</label>\n                <input\n                  type=\"text\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n                <label>Content of entry</label>\n                <FroalaEditor\n                  config={{\n                    docId: \"froala-editor\",\n                    toolbarButtons: [\n                      \"fullscreen\",\n                      \"bold\",\n                      \"italic\",\n                      \"underline\",\n                      \"strikeThrough\",\n                      \"subscript\",\n                      \"superscript\",\n                      \"|\",\n                      \"paragraphFormat\",\n                      \"align\",\n                      \"formatOL\",\n                      \"formatUL\",\n                      \"outdent\",\n                      \"indent\",\n                      \"quote\",\n                      \"-\",\n                      \"insertLink\",\n                      \"insertImage\",\n                      \"insertTable\",\n                      \"|\",\n                      \"fontAwesome\",\n                      \"specialCharacters\",\n                      \"insertHR\",\n                      \"selectAll\",\n                      \"clearFormatting\",\n                      \"html\",\n                      \"|\",\n                      \"undo\",\n                      \"redo\",\n                    ],\n                    quickInsertTags: [\"p\", \"div\", \"h1\", \"h2\", \"h3\"],\n                  }}\n                  tag=\"textarea\"\n                  onModelChange={(model) => setContent(model)}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"success\"\n                  onClick={() => createBlogEntry()}\n                >\n                  <FontAwesomeIcon icon={faSave} /> Publish entry\n                </button>\n              </>\n            )}\n          </div>\n        )}\n\n        {entries === \"\" && <h2>No blog post so far ...</h2>}\n\n        {entries.map((entry) => {\n          var entryDate = formatDate(entry.time);\n          return (\n            <div key={entry.time} className=\"blog-entry\">\n              <div className=\"blog-entry__meta\">\n                <h2>{entry.title}</h2>\n                <div>Written on {entryDate}</div>\n              </div>\n              <div dangerouslySetInnerHTML={{ __html: entry.content }}></div>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/tommyCodes.ee0b293c.svg\";","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport LoadingIndicator from \"./LoadingIndicator/LoadingIndicator\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { isAdmin } from './helpers/userRole';\n\nimport Login from \"./Login/Login\";\nimport Profile from \"./Profile/Profile\";\nimport UserManagement from \"./UserManagement/UserManagement\";\nimport Blog from \"./Blog/Blog\";\n\nimport tommyCodesLogo from \"./assets/tommyCodes.svg\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n\n    toast.success(\"Logged out successfully! Redirecting to home.\", {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      transition: Slide,\n    });\n\n    setTimeout(() => {\n      window.location = \"/\";\n    }, 2000);\n  };\n\n  return (\n    <Router>\n      {/* {isLoading && */}\n        <LoadingIndicator loadingState={isLoading} />\n      {/* } */}\n      <header>\n        <div className=\"logo-holder\">\n          <NavLink activeClassName=\"active\" to=\"/\" exact>\n            <img src={tommyCodesLogo} alt=\"Tommy Codes Blog\" />\n          </NavLink>\n        </div>\n        <div className=\"main-navigation\">\n          <nav>\n            <ul>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/\" exact>\n                  Blog\n                </NavLink>\n              </li>\n              {!token && (\n                <li className=\"logout\">\n                  <NavLink activeClassName=\"active\" to=\"/login\" exact>\n                    Login\n                  </NavLink>\n                </li>\n              )}\n              {token && (\n                <>\n                  <li>\n                    <NavLink activeClassName=\"active\" to=\"/profile\">\n                      Profile\n                    </NavLink>\n                  </li>\n                  {isAdmin() && (\n                    <li>\n                      <NavLink activeClassName=\"active\" to=\"/userManagement\">\n                        Users\n                      </NavLink>\n                    </li>\n                  )}\n                  <li className=\"logout\">\n                    <button href=\"#\" onClick={() => handleLogout()}>\n                      Logout\n                    </button>\n                  </li>\n                </>\n              )}\n            </ul>\n          </nav>\n          <ToastContainer />\n        </div>\n      </header>\n      {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/\" exact>\n          <Blog handleLoading={setIsLoading} />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile handleLoading={setIsLoading} />\n        </Route>\n        <Route path=\"/userManagement\">\n          <UserManagement handleLoading={setIsLoading} />\n        </Route>\n        <Route handleLoading={setIsLoading} path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}